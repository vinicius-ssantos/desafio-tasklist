####
# This Dockerfile is used in order to build a container that runs the Quarkus application in JVM mode on AWS Elastic Beanstalk
#
# Before building the docker image run:
#
# mvn clean package assembly:single -Dquarkus.package.uber-jar=true
#
# Then, build the image with:
#
# docker build -t quarkus/task-api-jvm-eb .
#
# Before running the container start the database:
#
# docker run -it --name task-db -p 5432:5432 -e POSTGRES_DB=task -e POSTGRES_USER=task -e POSTGRES_PASSWORD=task -d postgres:11.6-alpine
#
# Run the application passing RDS environment variables and link to the database container:
#
# docker run -i --rm -p 8080:5000 --link task-db -e RDS_HOSTNAME=task-db -e RDS_PORT=5432 -e RDS_DB_NAME=task -e RDS_USERNAME=task -e RDS_PASSWORD=task quarkus/task-api-jvm-eb
#
###
FROM registry.access.redhat.com/ubi8/ubi-minimal:8.1

ARG JAVA_PACKAGE=java-11-openjdk-headless
ARG RUN_JAVA_VERSION=1.3.5

ENV LANG='en_US.UTF-8' LANGUAGE='en_US:en'

# Install java and the run-java script
# Also set up permissions for user `1001`
RUN microdnf install openssl curl ca-certificates ${JAVA_PACKAGE} \
    && microdnf update \
    && microdnf clean all \
    && mkdir /deployments \
    && chown 1001 /deployments \
    && chmod "g+rwX" /deployments \
    && chown 1001:root /deployments \
    && curl https://repo1.maven.org/maven2/io/fabric8/run-java-sh/${RUN_JAVA_VERSION}/run-java-sh-${RUN_JAVA_VERSION}-sh.sh -o /deployments/run-java.sh \
    && chown 1001 /deployments/run-java.sh \
    && chmod 540 /deployments/run-java.sh \
    && echo "securerandom.source=file:/dev/urandom" >> /etc/alternatives/jre/lib/security/java.security

# Configure the JAVA_OPTIONS, you can add -XshowSettings:vm to also display the heap size.
ENV JAVA_OPTIONS="-Djava.util.logging.manager=org.jboss.logmanager.LogManager"

RUN echo $JAVA_OPTIONS

COPY *-runner.jar /deployments/app.jar
COPY config /deployments/config

EXPOSE 5000
USER 1001

ENTRYPOINT [ "/deployments/run-java.sh" ]
